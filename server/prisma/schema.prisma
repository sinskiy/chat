generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  username       String          @unique @db.VarChar(30)
  password       String          @db.VarChar(255)
  status         Status?
  requests       FriendRequest[] @relation("Requests")
  requested      FriendRequest[] @relation("Requested")
  groups         Group[]         @relation("Groups")
  createdGroups  Group[]         @relation("CreatedGroups")
  groupRequests  GroupRequest[]
  messages       Message[]       @relation("Messages")
  gottenMessages Message[]       @relation("GottenMessages")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Status {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id])
  userId    Int        @unique
  type      StatusType
  updatedAt DateTime   @updatedAt
}

enum StatusType {
  TYPING
  ONLINE
  OFFLINE
}

model FriendRequest {
  id              Int  @id @default(autoincrement())
  user            User @relation(name: "Requests", fields: [userId], references: [id])
  userId          Int
  requestedUser   User @relation(name: "Requested", fields: [requestedUserId], references: [id])
  requestedUserId Int
}

model Group {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(30)
  creator      User           @relation(name: "CreatedGroups", fields: [creatorId], references: [id])
  creatorId    Int
  members      User[]         @relation(name: "Groups")
  GroupRequest GroupRequest[]
}

model GroupRequest {
  id      Int   @id @default(autoincrement())
  group   Group @relation(fields: [groupId], references: [id])
  groupId Int
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
}

model Message {
  id          Int          @id @default(autoincrement())
  sender      User         @relation(name: "Messages", fields: [senderId], references: [id])
  text        String       @db.VarChar(255) // encrypted
  senderId    Int
  recipient   User         @relation(name: "GottenMessages", fields: [recipientId], references: [id])
  recipientId Int
  createdAt   DateTime     @default(now())
  Attachment  Attachment[]
}

model Attachment {
  id        Int     @id @default(autoincrement())
  message   Message @relation(fields: [messageId], references: [id])
  messageId Int
}
